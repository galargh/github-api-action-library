name: Add Project Items By Content ID
description: Add project items by content ID
inputs:
  project:
    description: The project ID
    required: true
  content-ids:
    description: The list of content IDs
    required: true
outputs:
  added-item-ids:
    description: The list of added project item IDs
    value: ${{ steps.items.outputs.added-item-ids }}
  failed-content-ids:
    description: The list of content IDs that failed to be added
    value: ${{ steps.items.outputs.failed-content-ids }}
runs:
  using: composite
  steps:
    - id: items
      run: |
        added_item_ids=''
        failed_content_ids=''
        for content_id in $(jq -r '.[]' <<< '${{ inputs.content-ids }}'); do
          echo "::group::$content_id"
          if item_id="$(gh api graphql -f query='mutation($contentId: ID!) {
            addProjectNextItem(input: {
              projectId: "${{ inputs.project }}",
              contentId: $contentId
            }) {
              projectNextItem{
                id
              }
            }
          }' -f contentId="$content_id" --jq '.data.addProjectNextItem.id')"; then
            added_item_ids="$added_item_ids $item_id"
          else
            failed_content_ids="$failed_content_ids \"$content_id\""
          fi
          echo "::endgroup::"
        done
        added_item_ids="$(jq -sc '.' <<< "$added_item_ids")"
        failed_content_ids="$(jq -sc '.' <<< "$failed_content_ids")"
        echo "::set-output name=added-item-ids::$added_item_ids"
        echo "::set-output name=failed-content-ids::$failed_content_ids"
      shell: bash
